# Within a record
if (!is.null(record)) {
# Extract VERSION
if (grepl("^VERSION", line)) {
record$VERSION <- sub("^VERSION\\s+(\\S+).*", "\\1", line)
}
# Extract ORGANISM
if (grepl("^\\s+ORGANISM", line)) {
record$ORGANISM <- sub("^\\s+ORGANISM\\s+(.*)", "\\1", line)
in_taxonomy <- TRUE
} else if (in_taxonomy) {
# If we are in the taxonomy section, collect taxonomy lines
if (grepl("^REFERENCE|^FEATURES", line)) {
in_taxonomy <- FALSE
} else {
# Append taxonomy line
record$TAXONOMY <- paste(record$TAXONOMY, trimws(line), sep=" ")
}
}
}
}
# Save the last record
if (!is.null(record)) {
records[[length(records) + 1]] <- record
}
# Convert records list to data frame
df <- do.call(rbind, lapply(records, as.data.frame))
# Clean up the taxonomy strings
df$TAXONOMY <- gsub("\\s+", " ", df$TAXONOMY)
df$TAXONOMY <- gsub("\\.$", "", df$TAXONOMY)  # Remove trailing period
df$TAXONOMY <- trimws(df$TAXONOMY)
# Return the data frame
return(df)
}
genbank_file <- "ref/sequence.gb"
output_file <- "ref/taxonomy_mapping.txt"
df <- extract_taxonomy(genbank_file, output_file)
colnames(df) = c("Seq_ID", "ORGANISM", "TAXONOMY")
df$ORGANISM <- gsub(" ", "_", df$ORGANISM)
df$TAXONOMY <- gsub(" ", "", df$TAXONOMY)
df$taxonomy <- paste(df$TAXONOMY, df$ORGANISM, sep = ";")
# split
num_levels <- length(unlist(strsplit(df$taxonomy[1], split = ";")))
taxonomy_levels <- c(
"Domain",
"Kingdom",
"Clade1",          # Ecdysozoa (通常作為一個超門或大綱)
"Phylum",
"Subphylum",
"Class",
"Subclass",
"Infraclass",
"Superorder",
"Order",
"Suborder",
"Infraorder",
"Superfamily",
"Family",
"Subfamily",
"Genus",
"Species"
)
df_separated <- df %>%
tidyr::separate(col = taxonomy,
into = taxonomy_levels,
sep = ";",
remove = TRUE,
fill = "right")
library(dplyr)
library(dplyr)
# genbank_to_fasta.R
extract_taxonomy <- function(genbank_file, output_file) {
lines <- readLines(genbank_file)
# Initialize variables
records <- list()
record <- NULL
in_taxonomy <- FALSE
for (i in seq_along(lines)) {
line <- lines[i]
# Start of a new record
if (grepl("^LOCUS", line)) {
if (!is.null(record)) {
# Save the previous record
records[[length(records) + 1]] <- record
}
# Initialize a new record
record <- list()
record$VERSION <- NA
record$ORGANISM <- NA
record$TAXONOMY <- ""
in_taxonomy <- FALSE
}
# Within a record
if (!is.null(record)) {
# Extract VERSION
if (grepl("^VERSION", line)) {
record$VERSION <- sub("^VERSION\\s+(\\S+).*", "\\1", line)
}
# Extract ORGANISM
if (grepl("^\\s+ORGANISM", line)) {
record$ORGANISM <- sub("^\\s+ORGANISM\\s+(.*)", "\\1", line)
in_taxonomy <- TRUE
} else if (in_taxonomy) {
# If we are in the taxonomy section, collect taxonomy lines
if (grepl("^REFERENCE|^FEATURES", line)) {
in_taxonomy <- FALSE
} else {
# Append taxonomy line
record$TAXONOMY <- paste(record$TAXONOMY, trimws(line), sep=" ")
}
}
}
}
# Save the last record
if (!is.null(record)) {
records[[length(records) + 1]] <- record
}
# Convert records list to data frame
df <- do.call(rbind, lapply(records, as.data.frame))
# Clean up the taxonomy strings
df$TAXONOMY <- gsub("\\s+", " ", df$TAXONOMY)
df$TAXONOMY <- gsub("\\.$", "", df$TAXONOMY)  # Remove trailing period
df$TAXONOMY <- trimws(df$TAXONOMY)
# Return the data frame
return(df)
}
genbank_file <- "ref/sequence.gb"
output_file <- "ref/taxonomy_mapping.txt"
df <- extract_taxonomy(genbank_file, output_file)
colnames(df) = c("Seq_ID", "ORGANISM", "TAXONOMY")
df$ORGANISM <- gsub(" ", "_", df$ORGANISM)
df$TAXONOMY <- gsub(" ", "", df$TAXONOMY)
df$taxonomy <- paste(df$TAXONOMY, df$ORGANISM, sep = ";")
# split
num_levels <- length(unlist(strsplit(df$taxonomy[1], split = ";")))
taxonomy_levels <- c(
"Domain",
"Kingdom",
"Clade1",          # Ecdysozoa (通常作為一個超門或大綱)
"Phylum",
"Subphylum",
"Class",
"Subclass",
"Infraclass",
"Superorder",
"Order",
"Suborder",
"Infraorder",
"Superfamily",
"Family",
"Subfamily",
"Genus",
"Species"
)
df_separated <- df %>%
tidyr::separate(col = taxonomy,
into = taxonomy_levels,
sep = ";",
remove = TRUE,
fill = "right")
df_separated <- df_separated %>% select(-ORGANISM, -TAXONOMY)
df_separated <- na.omit(df_separated)
write.table(df_separated,
file = "ref/taxonomy_tidy.txt",
row.names = F,
col.names = TRUE,
quote = F,
sep = '\t')
write.table(df_separated$Seq_ID,
file = "ref/taxonomy_tidy_IDs.txt",
row.names = F,
col.names = F,
quote = F,
sep = '\t')
View(df_separated)
View(df_separated)
names(df_separated)
df_separated <- df_separated %>% dplyr::select(Seq_ID, Domain, Kingdom, Phylum, Class, Order, Family, Genus, Species)
write.table(df_separated,
file = "ref/taxonomy_tidy.txt",
row.names = F,
col.names = TRUE,
quote = F,
sep = '\t')
write.table(df_separated$Seq_ID,
file = "ref/taxonomy_tidy_IDs.txt",
row.names = F,
col.names = F,
quote = F,
sep = '\t')
ranks <- c("Domain", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
for (i in seq_len(length(ranks) - 1)) {
higher_rank <- ranks[i]
lower_rank <- ranks[i + 1]
# Check if each lower_rank taxon is associated with more than one higher_rank taxon
discrepancy <- df_separated %>%
group_by_at(lower_rank) %>%
summarize(unique_parents = n_distinct(.data[[higher_rank]])) %>%
ungroup() %>%
filter(unique_parents > 1)
if (nrow(discrepancy) > 0) {
message("Discrepancies found for the pair ", higher_rank, " -> ", lower_rank, ":")
print(discrepancy)
} else {
message("No discrepancies found for the pair ", higher_rank, " -> ", lower_rank, ".")
}
}
grep("environmentalsamples", df_separated, ignore.case = T, value = T)
df_separated <- df_separated[df_separated$Genus != "environmentalsamples",]
write.table(df_separated,
file = "ref/taxonomy_tidy.txt",
row.names = F,
col.names = TRUE,
quote = F,
sep = '\t')
write.table(df_separated$Seq_ID,
file = "ref/taxonomy_tidy_IDs.txt",
row.names = F,
col.names = F,
quote = F,
sep = '\t')
write.table(df_separated,
file = "ref/taxonomy_tidy.txt",
row.names = F,
col.names = TRUE,
quote = F,
sep = '\t')
write.table(df_separated$Seq_ID,
file = "ref/taxonomy_tidy_IDs.txt",
row.names = F,
col.names = F,
quote = F,
sep = '\t')
df_separated
library(dplyr)
# genbank_to_fasta.R
extract_taxonomy <- function(genbank_file, output_file) {
lines <- readLines(genbank_file)
# Initialize variables
records <- list()
record <- NULL
in_taxonomy <- FALSE
for (i in seq_along(lines)) {
line <- lines[i]
# Start of a new record
if (grepl("^LOCUS", line)) {
if (!is.null(record)) {
# Save the previous record
records[[length(records) + 1]] <- record
}
# Initialize a new record
record <- list()
record$VERSION <- NA
record$ORGANISM <- NA
record$TAXONOMY <- ""
in_taxonomy <- FALSE
}
# Within a record
if (!is.null(record)) {
# Extract VERSION
if (grepl("^VERSION", line)) {
record$VERSION <- sub("^VERSION\\s+(\\S+).*", "\\1", line)
}
# Extract ORGANISM
if (grepl("^\\s+ORGANISM", line)) {
record$ORGANISM <- sub("^\\s+ORGANISM\\s+(.*)", "\\1", line)
in_taxonomy <- TRUE
} else if (in_taxonomy) {
# If we are in the taxonomy section, collect taxonomy lines
if (grepl("^REFERENCE|^FEATURES", line)) {
in_taxonomy <- FALSE
} else {
# Append taxonomy line
record$TAXONOMY <- paste(record$TAXONOMY, trimws(line), sep=" ")
}
}
}
}
# Save the last record
if (!is.null(record)) {
records[[length(records) + 1]] <- record
}
# Convert records list to data frame
df <- do.call(rbind, lapply(records, as.data.frame))
# Clean up the taxonomy strings
df$TAXONOMY <- gsub("\\s+", " ", df$TAXONOMY)
df$TAXONOMY <- gsub("\\.$", "", df$TAXONOMY)  # Remove trailing period
df$TAXONOMY <- trimws(df$TAXONOMY)
# Return the data frame
return(df)
}
genbank_file <- "ref/sequence.gb"
output_file <- "ref/taxonomy_mapping.txt"
df <- extract_taxonomy(genbank_file, output_file)
gc()
library(dplyr)
# genbank_to_fasta.R
extract_taxonomy <- function(genbank_file, output_file) {
lines <- readLines(genbank_file)
# Initialize variables
records <- list()
record <- NULL
in_taxonomy <- FALSE
for (i in seq_along(lines)) {
line <- lines[i]
# Start of a new record
if (grepl("^LOCUS", line)) {
if (!is.null(record)) {
# Save the previous record
records[[length(records) + 1]] <- record
}
# Initialize a new record
record <- list()
record$VERSION <- NA
record$ORGANISM <- NA
record$TAXONOMY <- ""
in_taxonomy <- FALSE
}
# Within a record
if (!is.null(record)) {
# Extract VERSION
if (grepl("^VERSION", line)) {
record$VERSION <- sub("^VERSION\\s+(\\S+).*", "\\1", line)
}
# Extract ORGANISM
if (grepl("^\\s+ORGANISM", line)) {
record$ORGANISM <- sub("^\\s+ORGANISM\\s+(.*)", "\\1", line)
in_taxonomy <- TRUE
} else if (in_taxonomy) {
# If we are in the taxonomy section, collect taxonomy lines
if (grepl("^REFERENCE|^FEATURES", line)) {
in_taxonomy <- FALSE
} else {
# Append taxonomy line
record$TAXONOMY <- paste(record$TAXONOMY, trimws(line), sep=" ")
}
}
}
}
# Save the last record
if (!is.null(record)) {
records[[length(records) + 1]] <- record
}
# Convert records list to data frame
df <- do.call(rbind, lapply(records, as.data.frame))
# Clean up the taxonomy strings
df$TAXONOMY <- gsub("\\s+", " ", df$TAXONOMY)
df$TAXONOMY <- gsub("\\.$", "", df$TAXONOMY)  # Remove trailing period
df$TAXONOMY <- trimws(df$TAXONOMY)
# Return the data frame
return(df)
}
genbank_file <- "ref/sequence.gb"
output_file <- "ref/taxonomy_mapping.txt"
df <- extract_taxonomy(genbank_file, output_file)
library(dplyr)
# genbank_to_fasta.R
extract_taxonomy <- function(genbank_file, output_file) {
lines <- readLines(genbank_file)
# Initialize variables
records <- list()
record <- NULL
in_taxonomy <- FALSE
for (i in seq_along(lines)) {
line <- lines[i]
# Start of a new record
if (grepl("^LOCUS", line)) {
if (!is.null(record)) {
# Save the previous record
records[[length(records) + 1]] <- record
}
# Initialize a new record
record <- list()
record$VERSION <- NA
record$ORGANISM <- NA
record$TAXONOMY <- ""
in_taxonomy <- FALSE
}
# Within a record
if (!is.null(record)) {
# Extract VERSION
if (grepl("^VERSION", line)) {
record$VERSION <- sub("^VERSION\\s+(\\S+).*", "\\1", line)
}
# Extract ORGANISM
if (grepl("^\\s+ORGANISM", line)) {
record$ORGANISM <- sub("^\\s+ORGANISM\\s+(.*)", "\\1", line)
in_taxonomy <- TRUE
} else if (in_taxonomy) {
# If we are in the taxonomy section, collect taxonomy lines
if (grepl("^REFERENCE|^FEATURES", line)) {
in_taxonomy <- FALSE
} else {
# Append taxonomy line
record$TAXONOMY <- paste(record$TAXONOMY, trimws(line), sep=" ")
}
}
}
}
# Save the last record
if (!is.null(record)) {
records[[length(records) + 1]] <- record
}
# Convert records list to data frame
df <- do.call(rbind, lapply(records, as.data.frame))
# Clean up the taxonomy strings
df$TAXONOMY <- gsub("\\s+", " ", df$TAXONOMY)
df$TAXONOMY <- gsub("\\.$", "", df$TAXONOMY)  # Remove trailing period
df$TAXONOMY <- trimws(df$TAXONOMY)
# Return the data frame
return(df)
}
genbank_file <- "ref/sequence.gb"
output_file <- "ref/taxonomy_mapping.txt"
df <- extract_taxonomy(genbank_file, output_file)
colnames(df) = c("Seq_ID", "ORGANISM", "TAXONOMY")
df$ORGANISM <- gsub(" ", "_", df$ORGANISM)
df$TAXONOMY <- gsub(" ", "", df$TAXONOMY)
df$taxonomy <- paste(df$TAXONOMY, df$ORGANISM, sep = ";")
# split
num_levels <- length(unlist(strsplit(df$taxonomy[1], split = ";")))
taxonomy_levels <- c(
"Domain",
"Kingdom",
"Clade1",          # Ecdysozoa (通常作為一個超門或大綱)
"Phylum",
"Subphylum",
"Class",
"Subclass",
"Infraclass",
"Superorder",
"Order",
"Suborder",
"Infraorder",
"Superfamily",
"Family",
"Subfamily",
"Genus",
"Species"
)
df_separated <- df %>%
tidyr::separate(col = taxonomy,
into = taxonomy_levels,
sep = ";",
remove = TRUE,
fill = "right")
df_separated <- df_separated %>% select(-ORGANISM, -TAXONOMY)
df_separated <- na.omit(df_separated)
df_separated <- df_separated %>% dplyr::select(Seq_ID, Domain, Kingdom, Phylum, Class, Order, Family, Genus, Species)
df_separated <- df_separated[df_separated$Genus != "environmentalsamples",]
write.table(df_separated,
file = "ref/taxonomy_tidy.txt",
row.names = F,
col.names = TRUE,
quote = F,
sep = '\t')
write.table(df_separated$Seq_ID,
file = "ref/taxonomy_tidy_IDs.txt",
row.names = F,
col.names = F,
quote = F,
sep = '\t')
ranks <- c("Domain", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# We'll iterate through consecutive pairs: (Domain->Kingdom), (Kingdom->Phylum), (Phylum->Class), etc.
for (i in seq_len(length(ranks) - 1)) {
higher_rank <- ranks[i]
lower_rank <- ranks[i + 1]
# Check if each lower_rank taxon is associated with more than one higher_rank taxon
discrepancy <- df_separated %>%
group_by_at(lower_rank) %>%
summarize(unique_parents = n_distinct(.data[[higher_rank]])) %>%
ungroup() %>%
filter(unique_parents > 1)
if (nrow(discrepancy) > 0) {
message("Discrepancies found for the pair ", higher_rank, " -> ", lower_rank, ":")
print(discrepancy)
} else {
message("No discrepancies found for the pair ", higher_rank, " -> ", lower_rank, ".")
}
}
df_separated <- df_separated[df_separated$Species != "environmentalsamples",]
ranks <- c("Domain", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# We'll iterate through consecutive pairs: (Domain->Kingdom), (Kingdom->Phylum), (Phylum->Class), etc.
for (i in seq_len(length(ranks) - 1)) {
higher_rank <- ranks[i]
lower_rank <- ranks[i + 1]
# Check if each lower_rank taxon is associated with more than one higher_rank taxon
discrepancy <- df_separated %>%
group_by_at(lower_rank) %>%
summarize(unique_parents = n_distinct(.data[[higher_rank]])) %>%
ungroup() %>%
filter(unique_parents > 1)
if (nrow(discrepancy) > 0) {
message("Discrepancies found for the pair ", higher_rank, " -> ", lower_rank, ":")
print(discrepancy)
} else {
message("No discrepancies found for the pair ", higher_rank, " -> ", lower_rank, ".")
}
}
seq_len(length(ranks) - 1)
write.table(df_separated,
file = "ref/taxonomy_tidy.txt",
row.names = F,
col.names = TRUE,
quote = F,
sep = '\t')
write.table(df_separated$Seq_ID,
file = "ref/taxonomy_tidy_IDs.txt",
row.names = F,
col.names = F,
quote = F,
sep = '\t')
